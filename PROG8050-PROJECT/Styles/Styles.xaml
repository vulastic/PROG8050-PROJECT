<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:styles="clr-namespace:PROG8050_PROJECT.Styles">

	<!-- Toggle Button -->
	<Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Foreground" Value="{DynamicResource SecondaryTextColor}"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border x:Name="border" 
							BorderThickness="{TemplateBinding BorderThickness}" 
							Background="{TemplateBinding Background}" 
							SnapsToDevicePixels="True">
						<Path x:Name="icon" Height="24" Width="24" Stretch="Uniform"
							  Fill="{TemplateBinding Foreground}"
							  Data="M3,6H21V8H3V6M3,11H21V13H3V11M3,16H21V18H3V16Z"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" TargetName="border" Value="Transparent"/>
							<Setter Property="BorderBrush" TargetName="border" Value="#FFFFFF"/>
							<Setter Property="Fill" TargetName="icon" Value="{DynamicResource HighlightColor}"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="Background" TargetName="border" Value="Transparent"/>
							<Setter Property="BorderBrush" TargetName="border" Value="#FFFFFF"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- Menu Button -->
	<Style x:Key="MenuButtonStyle" TargetType="{x:Type RadioButton}">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Foreground" Value="Transparent"/>
		<Setter Property="Height" Value="50"/>
		<Setter Property="FontSize" Value="16"/>
		<Setter Property="FontWeight" Value="DemiBold"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RadioButton}">
					<Border x:Name="menuButton" 
							BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="45"/>
								<ColumnDefinition/>
							</Grid.ColumnDefinitions>

							<!-- Selected  -->
							<Border x:Name="btnSelected" Grid.ColumnSpan="2" CornerRadius="4" Width="210" HorizontalAlignment="Right"/>

							<!-- Indicator -->
							<Rectangle Name="Indicator" HorizontalAlignment="Left" Width="4" Height="40" VerticalAlignment="Center" RadiusX="2" RadiusY="2"/>

							<!-- Icon -->
							<Path x:Name="Icon" Margin="0,0,5,0" 
								  Height="24" Width="24" Stretch="None"
								  VerticalAlignment="Center" HorizontalAlignment="Right"
								  Fill="{DynamicResource SecondaryTextColor}"
								  Data="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}"/>

							<!-- Text -->
							<TextBlock x:Name="txtName" Grid.Column="1" Margin="15 0 0 0"
									   HorizontalAlignment="Left" VerticalAlignment="Center"
									   Foreground="{DynamicResource SecondaryTextColor}"
									   FontWeight="{TemplateBinding FontWeight}"
                                       FontSize="{TemplateBinding FontSize}"
									   Text="{TemplateBinding Content}"/>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="txtName" Property="Foreground" Value="{DynamicResource HighlightColor}"/>
							<Setter TargetName="Icon" Property="Fill" Value="{DynamicResource HighlightColor}"/>

							<!-- Indicator -->
							<Setter TargetName="Indicator" Property="Fill" Value="{DynamicResource HighlightColor}"/>
							<Setter TargetName="Indicator" Property="Height" Value="20"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="Icon" Property="Fill" Value="{DynamicResource HighlightColor}"/>
							<Setter TargetName="Indicator" Property="Fill" Value="{DynamicResource HighlightColor}"/>
							<Setter TargetName="Indicator" Property="Height" Value="20"/>
							<Setter TargetName="txtName" Property="Foreground" Value="{DynamicResource HighlightColor}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Button | Minimize | Maximize | Close -->
	<Style x:Key="IconButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Width" Value="25"/>
		<Setter Property="Height" Value="25"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="border" CornerRadius="5" 
							BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}">
						<Path Name="icon" Height="10" Width="10" Stretch="Uniform"
							  Fill="{DynamicResource SecondaryTextColor}"
							  Data="{TemplateBinding Content}"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="{DynamicResource SecondaryColor}"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True"/>
								<Condition Property="Tag" Value="IsCloseButton"/>
							</MultiTrigger.Conditions>
							<Setter Property="Background" Value="{DynamicResource AlertColor}"/>
						</MultiTrigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="icon" Property="Fill" Value="{DynamicResource HighlightColor}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- Button Display Only Text and Highlight -->
	<Style x:Key="TextButton" TargetType="{x:Type Button}">
		<Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<TextBlock Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}"/>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Foreground" Value="{DynamicResource HighlightColor}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- Border Animation Button -->
	<Style x:Key="BorderButton" TargetType="{x:Type Button}">
		<Setter Property="Foreground" Value="{DynamicResource PrimaryColor}"/>
		<Setter Property="Background" Value="{DynamicResource HighlightColor}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource HighlightColor}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="border" CornerRadius="8" 
							BorderThickness="{TemplateBinding BorderThickness}"
							BorderBrush="{TemplateBinding BorderBrush}"
							Background="{TemplateBinding Background}">
						<TextBlock x:Name="text"
								   HorizontalAlignment="Center" VerticalAlignment="Center"
								   Foreground="{TemplateBinding Foreground}"
								   FontWeight="{TemplateBinding FontWeight}"
								   FontSize="{TemplateBinding FontSize}"
								   Text="{TemplateBinding Content}"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="text" Property="Foreground" Value="{DynamicResource HighlightColor}"/>
							<Setter TargetName="border" Property="Background" Value="Transparent"/>
							<Setter TargetName="border" Property="BorderThickness" Value="1"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- WaterMark Text Box -->
	<Style x:Key="WaterMarkTextBox" TargetType="{x:Type TextBox}">
		<Setter Property="CaretBrush" Value="{DynamicResource TextColor}"/>
		<Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="{DynamicResource TextColor}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBox}">
					<Border CornerRadius="8"
						Background="{TemplateBinding Background}" 
						BorderBrush="{TemplateBinding BorderBrush}" 
						BorderThickness="{TemplateBinding BorderThickness}"
						SnapsToDevicePixels="True">
						<Grid>
							<ScrollViewer x:Name="PART_ContentHost" Margin="5,0,0,0" VerticalAlignment="Center" 
										  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
							<Label Margin="5,0,0,0" 
								   x:Name="WaterMarkLabel"
								   Content="{TemplateBinding Tag}" 
								   Foreground="{DynamicResource DisabledColor}"
								   VerticalAlignment="Center" Visibility="Collapsed"/>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="Text" Value=""/>
							</MultiTrigger.Conditions>
							<Setter Property="Visibility" TargetName="WaterMarkLabel" Value="Visible"/>
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="{DynamicResource DisabledColor}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- Watermark Password Box -->
	<Style x:Key="WaterMarkPasswordBox" TargetType="{x:Type PasswordBox}">
		<Setter Property="styles:PasswordBoxMonitor.IsMonitoring" Value="true"/>
		<Setter Property="CaretBrush" Value="{DynamicResource TextColor}"/>
		<Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="{DynamicResource TextColor}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type PasswordBox}">
					<Border CornerRadius="8"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							SnapsToDevicePixels="True">
						<Grid>
							<ScrollViewer x:Name="PART_ContentHost" Margin="5,0,0,0" VerticalAlignment="Center"
										  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
							<Label Margin="5,0,0,0"
								   x:Name="WaterMarkLabel"
								   Content="{TemplateBinding Tag}"
								   Foreground="{DynamicResource DisabledColor}"
								   VerticalAlignment="Center" Visibility="Collapsed"/>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="{DynamicResource DisabledColor}"/>
						</Trigger>
						<Trigger Property="styles:PasswordBoxMonitor.PasswordLength" Value="0">
							<Setter Property="Visibility" TargetName="WaterMarkLabel" Value="Visible"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>